[
null,
{"id":1,"list":[{"code":355,"indent":0,"parameters":["try {"]},{"code":655,"indent":0,"parameters":["  console.log(\"Script started.\");"]},{"code":655,"indent":0,"parameters":["  "]},{"code":655,"indent":0,"parameters":["  // Define the actor and book item"]},{"code":655,"indent":0,"parameters":["  const actor = $gameParty.members()[$gameParty._targetActorId-1]; // Targeted ally"]},{"code":655,"indent":0,"parameters":["  if (!actor) throw new Error(\"Actor not found.\");"]},{"code":655,"indent":0,"parameters":["  console.log(\"Targeted actor:\", actor.name()); // Call the name function to get the actor's name"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  const bookItem = $dataItems[$gameParty.lastItem().id];"]},{"code":655,"indent":0,"parameters":["  if (!bookItem) throw new Error(\"Book item not found.\");"]},{"code":655,"indent":0,"parameters":["  console.log(\"Book item selected:\", bookItem.name);"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  const skillName = bookItem.name; // The skill name is the same as the item name"]},{"code":655,"indent":0,"parameters":["  const skill = $dataSkills.find(skill => skill && skill.name === skillName);"]},{"code":655,"indent":0,"parameters":["  if (!skill) throw new Error(`Skill not found for book item: ${bookItem.name}`);"]},{"code":655,"indent":0,"parameters":["  console.log(\"Skill to learn:\", skill.name);"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Function to parse note tags for required classes and min level"]},{"code":655,"indent":0,"parameters":["  const parseTags = (item) => {"]},{"code":655,"indent":0,"parameters":["      const requiredClasses = [];"]},{"code":655,"indent":0,"parameters":["      let minLevel = 1; // Default minimum level if not specified"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["      const regexClass = /<reqClass:\\s*(\\d+)>/gi;"]},{"code":655,"indent":0,"parameters":["      const regexLevel = /<minLevel:\\s*(\\d+)>/i;"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["      let matchClass;"]},{"code":655,"indent":0,"parameters":["      while ((matchClass = regexClass.exec(item.note)) !== null) {"]},{"code":655,"indent":0,"parameters":["          requiredClasses.push(Number(matchClass[1]));"]},{"code":655,"indent":0,"parameters":["          console.log(\"Parsed required class:\", matchClass[1]);"]},{"code":655,"indent":0,"parameters":["      }"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["      const matchLevel = regexLevel.exec(item.note);"]},{"code":655,"indent":0,"parameters":["      if (matchLevel) {"]},{"code":655,"indent":0,"parameters":["          minLevel = Number(matchLevel[1]);"]},{"code":655,"indent":0,"parameters":["          console.log(\"Parsed minimum level:\", minLevel);"]},{"code":655,"indent":0,"parameters":["      }"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["      return { requiredClasses, minLevel };"]},{"code":655,"indent":0,"parameters":["  };"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Get the required classes and minimum level from the item notes"]},{"code":655,"indent":0,"parameters":["  const { requiredClasses, minLevel } = parseTags(bookItem);"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Check if the actor's class is allowed"]},{"code":655,"indent":0,"parameters":["  const classAllowed = requiredClasses.includes(actor._classId);"]},{"code":655,"indent":0,"parameters":["  console.log(\"Class allowed:\", classAllowed);"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Check if the actor's level meets the requirement"]},{"code":655,"indent":0,"parameters":["  const levelAllowed = actor.level >= minLevel;"]},{"code":655,"indent":0,"parameters":["  console.log(\"Level allowed:\", levelAllowed);"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Function to display a message in the game"]},{"code":655,"indent":0,"parameters":["  const displayMessage = (message) => {"]},{"code":655,"indent":0,"parameters":["      console.log(\"Displaying message:\", message);"]},{"code":655,"indent":0,"parameters":["      $gameMessage.add(message);  // Add message to the game message system"]},{"code":655,"indent":0,"parameters":["      $gameMessage.setFaceImage('', 0);  // Ensure no face image is set"]},{"code":655,"indent":0,"parameters":["      $gameMessage.setBackground(0);  // Set background to normal"]},{"code":655,"indent":0,"parameters":["  };"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  // Provide specific messages based on failure reasons and prevent item consumption if not usable"]},{"code":655,"indent":0,"parameters":["  if (skill && classAllowed && levelAllowed) {"]},{"code":655,"indent":0,"parameters":["      if (!actor.hasSkill(skill.id)) {"]},{"code":655,"indent":0,"parameters":["          actor.learnSkill(skill.id);"]},{"code":655,"indent":0,"parameters":["          displayMessage(`${actor.name()} learned ${skill.name}!`); // Correct actor name access"]},{"code":655,"indent":0,"parameters":["      } else {"]},{"code":655,"indent":0,"parameters":["          displayMessage(`${actor.name()} already knows ${skill.name}.`); // Correct actor name access"]},{"code":655,"indent":0,"parameters":["      }"]},{"code":655,"indent":0,"parameters":["  } else {"]},{"code":655,"indent":0,"parameters":["      if (!classAllowed) {"]},{"code":655,"indent":0,"parameters":["          displayMessage(`${actor.name()} class doesn't have access to ${skill.name}.`); // Correct actor name access"]},{"code":655,"indent":0,"parameters":["      } else if (!levelAllowed) {"]},{"code":655,"indent":0,"parameters":["          displayMessage(`${actor.name()} needs to be at least level ${minLevel} \\nto learn ${skill.name}.`); // Correct actor name access"]},{"code":655,"indent":0,"parameters":["      }"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["      // If conditions are not met, prevent item consumption"]},{"code":655,"indent":0,"parameters":["      $gameParty.gainItem(bookItem, 1); // Returns the item back to the party inventory"]},{"code":655,"indent":0,"parameters":["      console.log(\"Item returned to party inventory.\");"]},{"code":655,"indent":0,"parameters":["  }"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["  console.log(\"Script completed.\");"]},{"code":655,"indent":0,"parameters":[""]},{"code":655,"indent":0,"parameters":["} catch (error) {"]},{"code":655,"indent":0,"parameters":["  console.error(\"Error encountered:\", error);"]},{"code":655,"indent":0,"parameters":["}"]},{"code":0,"indent":0,"parameters":[]}],"name":"Learn Skill Book","switchId":1,"trigger":0},
{"id":2,"list":[{"code":301,"indent":0,"parameters":[1,188,false,true]},{"code":601,"indent":0,"parameters":[]},{"code":0,"indent":1,"parameters":[]},{"code":603,"indent":0,"parameters":[]},{"code":0,"indent":1,"parameters":[]},{"code":604,"indent":0,"parameters":[]},{"code":0,"indent":0,"parameters":[]}],"name":"Final Battle","switchId":1,"trigger":0},
{"id":3,"list":[{"code":0,"indent":0,"parameters":[]}],"name":"","switchId":1,"trigger":0},
{"id":4,"list":[{"code":0,"indent":0,"parameters":[]}],"name":"","switchId":1,"trigger":0}
]